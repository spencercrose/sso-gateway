# .github/workflows/build.yml

name: Build and Push Docker Images to GHCR

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    tags:
      - 'v*.*.*' # Trigger on new tags like v1.0.0, v1.0.1, etc.
  workflow_dispatch: # Allows manual triggering from the GitHub UI

env:
  REGISTRY: ghcr.io
  CLIENT_IMAGE_NAME: ${{ github.repository }}-client
  PROXY_IMAGE_NAME: ${{ github.repository }}-proxy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Grant write permission to push to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: metaClient
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short
            type=ref,event=tag

      - name: Build and Push Client Image
        id: build-app1
        uses: docker/build-push-action@v5
        with:
          context: ./sso-client
          file: ./sso-client/Dockerfile
          push: true # Push the image to the registry
          tags: ${{ steps.metaClient.outputs.tags }}
          labels: ${{ steps.metaClient.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (tags, labels) for Docker
        id: metaProxy
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROXY_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short
            type=ref,event=tag

      - name: Build and Push Proxy Image
        id: build-app2
        uses: docker/build-push-action@v5
        with:
          context: ./proxy
          file: ./proxy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Pushed Images
        run: |
          echo "Client Image Pushed: ${{ github.repository }}/app1:latest and ${{ github.sha }}"
          echo "Proxy Image Pushed: ${{ github.repository }}/app2:latest and ${{ github.sha }}"

